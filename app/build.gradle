plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.30'
}

android {
    compileSdk 31
    ndkVersion "21.4.7075529"

    externalNativeBuild {
        cmake {
            version = '3.18.1'
            path file('src/main/cpp/CMakeLists.txt')
        }
    }

    defaultConfig {
        applicationId "com.example.jonect"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags '-fno-exceptions'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module  = "../jonect_android_rust"
    libname = "jonect_android_rust"
    //targets = ["arm", "arm64", "x86", "x86_64"]
    targets = ["x86"]
    apiLevel = 21
    // Rust release build requires that externalNativeBuildRelease runs before it.
    // profile = "release"
    profile = "debug"
    targetIncludes = ['libjonect_android_rust.so', 'libjonect_android_cpp.so']
}

// TODO: Mixing Cargo and Android release and debug builds does not work currently as wrong files
//       are copied or updated.

tasks.whenTaskAdded { task ->
    if ((task.name == 'javaPreCompileDebug' || task.name == 'javaPreCompileRelease')) {
        task.dependsOn 'cargoBuild'
    }

    if ((task.name == 'cargoBuild' )) {
        task.mustRunAfter 'externalNativeBuildDebug', 'externalNativeBuildRelease'
    }
}